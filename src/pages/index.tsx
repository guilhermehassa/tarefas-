import Head from "next/head";
import Image from "next/image";
import { Geist, Geist_Mono } from "next/font/google";
import styles from "@/styles/home.module.css";
import { GetStaticProps } from "next";
import { collection, getDocs } from "firebase/firestore";
import {db} from "@/services/firebaseConnection";

interface HomeProps {
  posts: number;
  comments: number;
}

export default function Home({comments, posts}:HomeProps ) {
  return (
    <div className={styles.container}>
      <Head>
        <title>Tarefas + | Organize suas tarefas de forma fácil</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
        <link rel="preconnect" href="https://fonts.googleapis.com" />
        <link rel="preconnect" href="https://fonts.gstatic.com" />
        <link href="https://fonts.googleapis.com/css2?family=Roboto:ital@0;1&display=swap" rel="stylesheet" />
      </Head>
      <main className={styles.main}>
        <div className={styles.logoContent}>
          <Image
            src="/hero.png"
            alt="Logo Tarefas +"
            fill
            className={styles.hero}
            priority
          />
        </div>
        <h1 className={styles.title}>
          Sistema feito para você organizar<br />
          seus estudos e tarefas
        </h1>
        <div className={styles.infoContent}>
          <section className={styles.box}>
            <span>+{posts} posts</span>
          </section>
          <section className={styles.box}>
            <span>+{comments} posts</span>
          </section>
        </div>
      </main>
    </div>
  );
}

export const getStaticProps: GetStaticProps = async () => {

  const commentsRef = collection(db, "comments");
  const commentsSnapshot = await getDocs(commentsRef);

  const postsRef = collection(db, "tasks");
  const postsSnapshot = await getDocs(postsRef);

  return {
    props: {
      posts: postsSnapshot.size || 0,
      comments: commentsSnapshot.size || 0
    },
    revalidate: 60 * 60, // Revalida a cada 60 segundos
  };
}